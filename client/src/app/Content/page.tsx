"use client"

import { useState } from "react";

const Content = () => {
  const [mode, setMode] = useState("user"); // "user" for upload, "ai" for LLM
  const [text, setText] = useState("");
  const [image, setImage] = useState<string | null>(null);
  const [video, setVideo] = useState<string | null>(null);
  const [generatedContent, setGeneratedContent] = useState("");

  const handleFileUpload = (event: React.ChangeEvent<HTMLInputElement>, type: "image" | "video") => {
    const file = event.target.files?.[0];
    if (file) {
      const url = URL.createObjectURL(file);
      type === "image" ? setImage(url) : setVideo(url);
    }
  };

  const generateContent = () => {
    // Simulated AI response
    setGeneratedContent("AI-generated text: This is an example of text generated by the AI.");
  };

  return (
    <div className="max-w-4xl mx-auto p-6 bg-gray-900 text-white rounded-lg shadow-lg">
      <h2 className="text-2xl font-bold mb-4">Content Generator</h2>

      {/* Mode Selection */}
      <div className="flex space-x-4 mb-6">
        <button
          onClick={() => setMode("user")}
          className={`px-4 py-2 rounded ${mode === "user" ? "bg-blue-600" : "bg-gray-700"}`}
        >
          Upload Content
        </button>
        <button
          onClick={() => setMode("ai")}
          className={`px-4 py-2 rounded ${mode === "ai" ? "bg-blue-600" : "bg-gray-700"}`}
        >
          AI-Generated Content
        </button>
      </div>

      {/* User Upload Mode */}
      {mode === "user" && (
        <div className="space-y-4">
          <textarea
            placeholder="Enter your text here..."
            value={text}
            onChange={(e) => setText(e.target.value)}
            className="w-full p-2 rounded bg-gray-800 border border-gray-600"
          ></textarea>

          <div>
            <input type="file" accept="image/*" onChange={(e) => handleFileUpload(e, "image")} className="mb-2" />
            {image && <img src={image} alt="Uploaded" className="w-full h-40 object-cover rounded" />}
          </div>

          <div>
            <input type="file" accept="video/*" onChange={(e) => handleFileUpload(e, "video")} className="mb-2" />
            {video && <video src={video} controls className="w-full rounded"></video>}
          </div>
        </div>
      )}

      {/* AI Generation Mode */}
      {mode === "ai" && (
        <div className="space-y-4">
          <button onClick={generateContent} className="px-4 py-2 bg-green-600 rounded">
            Generate AI Content
          </button>
          {generatedContent && <p className="p-2 bg-gray-800 rounded">{generatedContent}</p>}
        </div>
      )}
    </div>
  );
};

export default Content;
